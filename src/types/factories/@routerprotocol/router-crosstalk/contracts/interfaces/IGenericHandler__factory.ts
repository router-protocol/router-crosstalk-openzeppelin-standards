/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IGenericHandler,
  IGenericHandlerInterface,
} from "../../../../../@routerprotocol/router-crosstalk/contracts/interfaces/IGenericHandler";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_rSyncContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "_chainID",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "_linkedContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "linkerType",
            type: "uint8",
          },
        ],
        internalType: "struct iGenericHandler.RouterLinker",
        name: "linker",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_sign",
        type: "bytes",
      },
    ],
    name: "MapContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_rSyncContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "_chainID",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "_linkedContract",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "linkerType",
            type: "uint8",
          },
        ],
        internalType: "struct iGenericHandler.RouterLinker",
        name: "linker",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_sign",
        type: "bytes",
      },
    ],
    name: "UnMapContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetch_chainID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_destChainID",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "genericDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IGenericHandler__factory {
  static readonly abi = _abi;
  static createInterface(): IGenericHandlerInterface {
    return new utils.Interface(_abi) as IGenericHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGenericHandler {
    return new Contract(address, _abi, signerOrProvider) as IGenericHandler;
  }
}
