/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CrossChainERC1155,
  CrossChainERC1155Interface,
} from "../../../../contracts/token/ERC1155/CrossChainERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        internalType: "address",
        name: "genericHandler_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "sourceChain",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "destChain",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
    ],
    name: "CrossTalkReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "sourceChain",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "destChain",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "CrossTalkSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "ChainID",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "linkedContract",
        type: "address",
      },
    ],
    name: "Linkevent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "ChainID",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "linkedContract",
        type: "address",
      },
    ],
    name: "Unlinkevent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_linkedContract",
        type: "address",
      },
    ],
    name: "Link",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
    ],
    name: "Unlink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchCrossChainGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "fetchExecutes",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "chainID",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct iRouterCrossTalk.ExecutesStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchFeeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
    ],
    name: "fetchLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchLinkSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "receiveCrossChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "srcChainID",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "srcAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "routerSync",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620025083803806200250883398101604081905262000034916200015d565b808262000041816200006b565b50600380546001600160a01b0319166001600160a01b0392909216919091179055506200028a9050565b80516200008090600290602084019062000084565b5050565b82805462000092906200024e565b90600052602060002090601f016020900481019282620000b6576000855562000101565b82601f10620000d157805160ff191683800117855562000101565b8280016001018555821562000101579182015b8281111562000101578251825591602001919060010190620000e4565b506200010f92915062000113565b5090565b5b808211156200010f576000815560010162000114565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200015857600080fd5b919050565b600080604083850312156200017157600080fd5b82516001600160401b03808211156200018957600080fd5b818501915085601f8301126200019e57600080fd5b815181811115620001b357620001b36200012a565b604051601f8201601f19908116603f01168101908382118183101715620001de57620001de6200012a565b81604052828152602093508884848701011115620001fb57600080fd5b600091505b828210156200021f578482018401518183018501529083019062000200565b82821115620002315760008484830101525b95506200024391505085820162000140565b925050509250929050565b600181811c908216806200026357607f821691505b6020821081036200028457634e487b7160e01b600052602260045260246000fd5b50919050565b61226e806200029a6000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c80636972bc50116100b2578063bf18028c11610081578063e985e9c511610066578063e985e9c514610333578063f242432a1461036f578063fe9dc81a1461038257600080fd5b8063bf18028c1461030f578063c9adbf821461032257600080fd5b80636972bc50146102d25780636edb7a3e146102e35780639de912b1146102f4578063a22cb465146102fc57600080fd5b80630e89341c116101095780633e27323d116100ee5780633e27323d1461021d5780634158cc27146102305780634e1273f4146102b257600080fd5b80630e89341c146101e85780632eb2c2d61461020857600080fd5b8062fdd58e1461013a57806301ffc9a7146101605780630500387f1461018357806306d07c59146101c7575b600080fd5b61014d6101483660046117d9565b610395565b6040519081526020015b60405180910390f35b61017361016e36600461181b565b61043e565b6040519015158152602001610157565b6101af61019136600461184e565b60ff166000908152600660205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610157565b6101da6101d5366004611932565b610484565b6040516101579291906119f0565b6101fb6101f6366004611a13565b61069b565b6040516101579190611a2c565b61021b610216366004611ad4565b61072f565b005b61021b61022b366004611b82565b6107d1565b61028a61023e366004611a13565b60408051808201909152600080825260208201525060009081526007602090815260409182902082518084019093525460ff81168352610100900467ffffffffffffffff169082015290565b60408051825160ff16815260209283015167ffffffffffffffff169281019290925201610157565b6102c56102c0366004611bbb565b610954565b6040516101579190611cc3565b6005546001600160a01b03166101af565b6003546001600160a01b03166101af565b60085461014d565b61021b61030a366004611cd6565b610a92565b61017361031d366004611d09565b610aa1565b6004546001600160a01b03166101af565b610173610341366004611da4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61021b61037d366004611dc2565b610b2f565b61021b61039036600461184e565b610bca565b60006001600160a01b0383166104185760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216639de912b160e01b148061046f57506001600160e01b031982166303a24d0760e21b145b8061047e575061047e82610cc7565b92915050565b60ff8316600090815260066020526040812054606090859085906001600160a01b0380831691161461051e5760405162461bcd60e51b815260206004820152602b60248201527f526f7574657243726f737354616c6b203a20536f75726365204164647265737360448201527f204e6f74206c696e6b6564000000000000000000000000000000000000000000606482015260840161040f565b6003546001600160a01b0316336001600160a01b0316146105a75760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e00000000606482015260840161040f565b600354604080516302cb03d960e61b815290516000926001600160a01b03169163b2c0f6409160048083019260209291908290030181865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190611e2b565b90506000808780602001905181019061062e9190611ea0565b9150915060008061063f8484610d17565b6040516001600160a01b038e168152919350915060ff80871691908e16907f4ef7c5e8df4a93d9634e83492a16efe750374905f02a02656e31369ff469ce3f9060200160405180910390a3909b909a5098505050505050505050565b6060600280546106aa90611ee7565b80601f01602080910402602001604051908101604052809291908181526020018280546106d690611ee7565b80156107235780601f106106f857610100808354040283529160200191610723565b820191906000526020600020905b81548152906001019060200180831161070657829003601f168201915b50505050509050919050565b6001600160a01b03851633148061074b575061074b8533610341565b6107bd5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161040f565b6107ca8585858585610e09565b5050505050565b6003546001600160a01b0316336001600160a01b03161461085a5760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e00000000606482015260840161040f565b60ff821660009081526006602052604090205482906001600160a01b0316156108eb5760405162461bcd60e51b815260206004820152603660248201527f526f7574657243726f737354616c6b203a2043726f737320436861696e20436f60448201527f6e747261637420746f20436861696e2049442073657400000000000000000000606482015260840161040f565b60ff8316600081815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03871690811790915590519092917f53c7bf44dd47ad6fd3a8aac7c23d9ad4bddd7ec5889d7afef3450216586460a391a3505050565b606081518351146109cd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161040f565b6000835167ffffffffffffffff8111156109e9576109e961186b565b604051908082528060200260200182016040528015610a12578160200160208202803683370190505b50905060005b8451811015610a8a57610a5d858281518110610a3657610a36611f21565b6020026020010151858381518110610a5057610a50611f21565b6020026020010151610395565b828281518110610a6f57610a6f611f21565b6020908102919091010152610a8381611f4d565b9050610a18565b509392505050565b610a9d338383611067565b5050565b6000333014610b185760405162461bcd60e51b815260206004820152603860248201527f526f7574657243726f737354616c6b203a2043616e206f6e6c7920626520636160448201527f6c6c65642062792043757272656e7420436f6e74726163740000000000000000606482015260840161040f565b610b248585858561115b565b506001949350505050565b6001600160a01b038516331480610b4b5750610b4b8533610341565b610bbd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161040f565b6107ca8585858585611321565b6003546001600160a01b0316336001600160a01b031614610c535760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e00000000606482015260840161040f565b60ff81166000818152600660205260408082205490516001600160a01b0390911692917f566e5d71d4547dca8d21d2527ec375bb6ad1052ea20ab35c3f310aba1d6bc66b91a360ff166000908152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006001600160e01b03198216636cdb3d1360e11b1480610cf857506001600160e01b031982166303a24d0760e21b145b8061047e57506301ffc9a760e01b6001600160e01b031983161461047e565b6000606060008060008086806020019051810190610d359190611fcc565b9350935093509350600080306001600160a01b03168a87878787604051602401610d62949392919061205c565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909416939093179092529051610db591906120af565b6000604051808303816000865af19150503d8060008114610df2576040519150601f19603f3d011682016040523d82523d6000602084013e610df7565b606091505b50909b909a5098505050505050505050565b8151835114610e6b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161040f565b6001600160a01b038416610ecf5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161040f565b3360005b8451811015610ff9576000858281518110610ef057610ef0611f21565b602002602001015190506000858381518110610f0e57610f0e611f21565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610fa15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161040f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610fde9084906120cb565b9250508190555050505080610ff290611f4d565b9050610ed3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110499291906120e3565b60405180910390a461105f8187878787876114cc565b505050505050565b816001600160a01b0316836001600160a01b0316036110ee5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161040f565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166111bb5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161040f565b815183511461121d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161040f565b3360005b84518110156112b95783818151811061123c5761123c611f21565b602002602001015160008087848151811061125957611259611f21565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112a191906120cb565b909155508190506112b181611f4d565b915050611221565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161130a9291906120e3565b60405180910390a46107ca816000878787876114cc565b6001600160a01b0384166113855760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161040f565b3360006113918561167a565b9050600061139e8561167a565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156114245760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161040f565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906114619084906120cb565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46114c1848a8a8a8a8a6116c5565b505050505050505050565b6001600160a01b0384163b1561105f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906115109089908990889088908890600401612108565b6020604051808303816000875af192505050801561154b575060408051601f3d908101601f1916820190925261154891810190612166565b60015b61160057611557612183565b806308c379a003611590575061156b61219f565b806115765750611592565b8060405162461bcd60e51b815260040161040f9190611a2c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161040f565b6001600160e01b0319811663bc197c8160e01b146116715760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161040f565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106116b4576116b4611f21565b602090810291909101015292915050565b6001600160a01b0384163b1561105f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906117099089908990889088908890600401612229565b6020604051808303816000875af1925050508015611744575060408051601f3d908101601f1916820190925261174191810190612166565b60015b61175057611557612183565b6001600160e01b0319811663f23a6e6160e01b146116715760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161040f565b6001600160a01b03811681146117d657600080fd5b50565b600080604083850312156117ec57600080fd5b82356117f7816117c1565b946020939093013593505050565b6001600160e01b0319811681146117d657600080fd5b60006020828403121561182d57600080fd5b813561183881611805565b9392505050565b60ff811681146117d657600080fd5b60006020828403121561186057600080fd5b81356118388161183f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156118a7576118a761186b565b6040525050565b600067ffffffffffffffff8211156118c8576118c861186b565b50601f01601f191660200190565b600082601f8301126118e757600080fd5b81356118f2816118ae565b6040516118ff8282611881565b82815285602084870101111561191457600080fd5b82602086016020830137600092810160200192909252509392505050565b60008060006060848603121561194757600080fd5b83356119528161183f565b92506020840135611962816117c1565b9150604084013567ffffffffffffffff81111561197e57600080fd5b61198a868287016118d6565b9150509250925092565b60005b838110156119af578181015183820152602001611997565b838111156119be576000848401525b50505050565b600081518084526119dc816020860160208601611994565b601f01601f19169290920160200192915050565b8215158152604060208201526000611a0b60408301846119c4565b949350505050565b600060208284031215611a2557600080fd5b5035919050565b60208152600061183860208301846119c4565b600067ffffffffffffffff821115611a5957611a5961186b565b5060051b60200190565b600082601f830112611a7457600080fd5b81356020611a8182611a3f565b604051611a8e8282611881565b83815260059390931b8501820192828101915086841115611aae57600080fd5b8286015b84811015611ac95780358352918301918301611ab2565b509695505050505050565b600080600080600060a08688031215611aec57600080fd5b8535611af7816117c1565b94506020860135611b07816117c1565b9350604086013567ffffffffffffffff80821115611b2457600080fd5b611b3089838a01611a63565b94506060880135915080821115611b4657600080fd5b611b5289838a01611a63565b93506080880135915080821115611b6857600080fd5b50611b75888289016118d6565b9150509295509295909350565b60008060408385031215611b9557600080fd5b8235611ba08161183f565b91506020830135611bb0816117c1565b809150509250929050565b60008060408385031215611bce57600080fd5b823567ffffffffffffffff80821115611be657600080fd5b818501915085601f830112611bfa57600080fd5b81356020611c0782611a3f565b604051611c148282611881565b83815260059390931b8501820192828101915089841115611c3457600080fd5b948201945b83861015611c5b578535611c4c816117c1565b82529482019490820190611c39565b96505086013592505080821115611c7157600080fd5b50611c7e85828601611a63565b9150509250929050565b600081518084526020808501945080840160005b83811015611cb857815187529582019590820190600101611c9c565b509495945050505050565b6020815260006118386020830184611c88565b60008060408385031215611ce957600080fd5b8235611cf4816117c1565b915060208301358015158114611bb057600080fd5b60008060008060808587031215611d1f57600080fd5b8435611d2a816117c1565b9350602085013567ffffffffffffffff80821115611d4757600080fd5b611d5388838901611a63565b94506040870135915080821115611d6957600080fd5b611d7588838901611a63565b93506060870135915080821115611d8b57600080fd5b50611d98878288016118d6565b91505092959194509250565b60008060408385031215611db757600080fd5b8235611ba0816117c1565b600080600080600060a08688031215611dda57600080fd5b8535611de5816117c1565b94506020860135611df5816117c1565b93506040860135925060608601359150608086013567ffffffffffffffff811115611e1f57600080fd5b611b75888289016118d6565b600060208284031215611e3d57600080fd5b81516118388161183f565b600082601f830112611e5957600080fd5b8151611e64816118ae565b604051611e718282611881565b828152856020848701011115611e8657600080fd5b611e97836020830160208801611994565b95945050505050565b60008060408385031215611eb357600080fd5b8251611ebe81611805565b602084015190925067ffffffffffffffff811115611edb57600080fd5b611c7e85828601611e48565b600181811c90821680611efb57607f821691505b602082108103611f1b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f5f57611f5f611f37565b5060010190565b600082601f830112611f7757600080fd5b81516020611f8482611a3f565b604051611f918282611881565b83815260059390931b8501820192828101915086841115611fb157600080fd5b8286015b84811015611ac95780518352918301918301611fb5565b60008060008060808587031215611fe257600080fd5b8451611fed816117c1565b602086015190945067ffffffffffffffff8082111561200b57600080fd5b61201788838901611f66565b9450604087015191508082111561202d57600080fd5b61203988838901611f66565b9350606087015191508082111561204f57600080fd5b50611d9887828801611e48565b6001600160a01b038516815260806020820152600061207e6080830186611c88565b82810360408401526120908186611c88565b905082810360608401526120a481856119c4565b979650505050505050565b600082516120c1818460208701611994565b9190910192915050565b600082198211156120de576120de611f37565b500190565b6040815260006120f66040830185611c88565b8281036020840152611e978185611c88565b60006001600160a01b03808816835280871660208401525060a0604083015261213460a0830186611c88565b82810360608401526121468186611c88565b9050828103608084015261215a81856119c4565b98975050505050505050565b60006020828403121561217857600080fd5b815161183881611805565b600060033d111561219c5760046000803e5060005160e01c5b90565b600060443d10156121ad5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156121dd57505050505090565b82850191508151818111156121f55750505050505090565b843d870101602082850101111561220f5750505050505090565b61221e60208286010187611881565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526120a460a08301846119c456fea164736f6c634300080d000a";

type CrossChainERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainERC1155__factory extends ContractFactory {
  constructor(...args: CrossChainERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    genericHandler_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainERC1155> {
    return super.deploy(
      uri_,
      genericHandler_,
      overrides || {}
    ) as Promise<CrossChainERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    genericHandler_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, genericHandler_, overrides || {});
  }
  override attach(address: string): CrossChainERC1155 {
    return super.attach(address) as CrossChainERC1155;
  }
  override connect(signer: Signer): CrossChainERC1155__factory {
    return super.connect(signer) as CrossChainERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainERC1155Interface {
    return new utils.Interface(_abi) as CrossChainERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainERC1155 {
    return new Contract(address, _abi, signerOrProvider) as CrossChainERC1155;
  }
}
