/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  CrossChainTokenTimelock,
  CrossChainTokenTimelockInterface,
} from "../../../../../contracts/token/ERC20/utils/CrossChainTokenTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICrossChainERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "chainID",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "crossChainGasPrice",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ICrossChainERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161082a38038061082a83398101604081905261002f916100d0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160a01b03928316608052911660a05260c052610113565b6001600160a01b03811681146100cd57600080fd5b50565b6000806000606084860312156100e557600080fd5b83516100f0816100b8565b6020850151909350610101816100b8565b80925050604084015190509250925092565b60805160a05160c0516106d061015a600039600081816095015260fb015260008181605301526102af01526000818160d501528181610198015261028c01526106d06000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed14610051578063b91d400114610090578063cc537316146100be578063fc0c546a146100d3575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b6100d16100cc3660046105d7565b6100f9565b005b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f00000000000000000000000000000000000000000000000000000000000000004210156101945760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527f65666f72652072656c656173652074696d65000000000000000000000000000060648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190610609565b90506000811161027f5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b606482015260840161018b565b6102d56001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016847f000000000000000000000000000000000000000000000000000000000000000084866102da565b505050565b6040805160ff861660248201526001600160a01b03851660448201526064810184905260848082018490528251808303909101815260a49091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663cc138f1560e01b179052610351908690610358565b5050505050565b60006103ad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661043d9092919063ffffffff16565b8051909150156102d557808060200190518101906103cb9190610622565b6102d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161018b565b606061044c8484600085610456565b90505b9392505050565b6060824710156104ce5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161018b565b6001600160a01b0385163b6105255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018b565b600080866001600160a01b031685876040516105419190610674565b60006040518083038185875af1925050503d806000811461057e576040519150601f19603f3d011682016040523d82523d6000602084013e610583565b606091505b509150915061059382828661059e565b979650505050505050565b606083156105ad57508161044f565b8251156105bd5782518084602001fd5b8160405162461bcd60e51b815260040161018b9190610690565b600080604083850312156105ea57600080fd5b823560ff811681146105fb57600080fd5b946020939093013593505050565b60006020828403121561061b57600080fd5b5051919050565b60006020828403121561063457600080fd5b8151801515811461044f57600080fd5b60005b8381101561065f578181015183820152602001610647565b8381111561066e576000848401525b50505050565b60008251610686818460208701610644565b9190910192915050565b60208152600082518060208401526106af816040850160208701610644565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a";

type CrossChainTokenTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainTokenTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainTokenTimelock__factory extends ContractFactory {
  constructor(...args: CrossChainTokenTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    releaseTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainTokenTimelock> {
    return super.deploy(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    ) as Promise<CrossChainTokenTimelock>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    beneficiary_: PromiseOrValue<string>,
    releaseTime_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      beneficiary_,
      releaseTime_,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainTokenTimelock {
    return super.attach(address) as CrossChainTokenTimelock;
  }
  override connect(signer: Signer): CrossChainTokenTimelock__factory {
    return super.connect(signer) as CrossChainTokenTimelock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainTokenTimelockInterface {
    return new utils.Interface(_abi) as CrossChainTokenTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainTokenTimelock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainTokenTimelock;
  }
}
