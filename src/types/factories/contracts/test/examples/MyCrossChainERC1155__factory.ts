/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MyCrossChainERC1155,
  MyCrossChainERC1155Interface,
} from "../../../../contracts/test/examples/MyCrossChainERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
      {
        internalType: "address",
        name: "genericHandler_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "sourceChain",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "destChain",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
    ],
    name: "CrossTalkReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "sourceChain",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "destChain",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "CrossTalkSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "ChainID",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "linkedContract",
        type: "address",
      },
    ],
    name: "Linkevent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "ChainID",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "linkedContract",
        type: "address",
      },
    ],
    name: "Unlinkevent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_linkedContract",
        type: "address",
      },
    ],
    name: "Link",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
    ],
    name: "Unlink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approveFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchCrossChainGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "fetchExecutes",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "chainID",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
        ],
        internalType: "struct iRouterCrossTalk.ExecutesStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchFeeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchHandler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
    ],
    name: "fetchLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchLinkSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "receiveCrossChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "srcChainID",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "srcAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "routerSync",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256",
      },
    ],
    name: "setCrossChainGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_linker",
        type: "address",
      },
    ],
    name: "setLinker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_chainID",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_crossChainGasPrice",
        type: "uint256",
      },
    ],
    name: "transferCrossChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620038a2380380620038a28339810160408190526200003491620006c4565b818180826200004381620001bc565b50600380546001600160a01b03929092166001600160a01b0319928316178155600980549092163317909155604080518281526080810190915260009350915060208201606080368337019050509050600181600081518110620000ab57620000ab6200078a565b602002602001018181525050600281600181518110620000cf57620000cf6200078a565b602002602001018181525050600381600281518110620000f357620000f36200078a565b6020908102919091010152604080516003808252608082019092526000918160200160208202803683370190505090506005816000815181106200013b576200013b6200078a565b6020026020010181815250506005816001815181106200015f576200015f6200078a565b6020026020010181815250506005816002815181106200018357620001836200078a565b602002602001018181525050620001b233838360405180602001604052806000815250620001d560201b60201c565b5050505062000a1e565b8051620001d1906002906020840190620005a6565b5050565b6001600160a01b0384166200023b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b81518351146200029f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840162000232565b3360005b84518110156200034757838181518110620002c257620002c26200078a565b6020026020010151600080878481518110620002e257620002e26200078a565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546200032c9190620007b6565b909155508190506200033e81620007d1565b915050620002a3565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516200039a9291906200082a565b60405180910390a4620003b381600087878787620003c2565b5050505050565b505050505050565b620003e1846001600160a01b03166200059760201b62000fb91760201c565b15620003ba5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906200041d90899089908890889088906004016200088a565b6020604051808303816000875af19250505080156200045b575060408051601f3d908101601f191682019092526200045891810190620008ee565b60015b6200051b576200046a62000921565b806308c379a003620004aa5750620004816200093e565b806200048e5750620004ac565b8060405162461bcd60e51b8152600401620002329190620009cd565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000232565b6001600160e01b0319811663bc197c8160e01b146200058e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000232565b50505050505050565b6001600160a01b03163b151590565b828054620005b490620009e2565b90600052602060002090601f016020900481019282620005d8576000855562000623565b82601f10620005f357805160ff191683800117855562000623565b8280016001018555821562000623579182015b828111156200062357825182559160200191906001019062000606565b506200063192915062000635565b5090565b5b8082111562000631576000815560010162000636565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156200068a576200068a6200064c565b6040525050565b60005b83811015620006ae57818101518382015260200162000694565b83811115620006be576000848401525b50505050565b60008060408385031215620006d857600080fd5b82516001600160401b0380821115620006f057600080fd5b818501915085601f8301126200070557600080fd5b8151818111156200071a576200071a6200064c565b604051915062000735601f8201601f19166020018362000662565b8082528660208285010111156200074b57600080fd5b6200075e81602084016020860162000691565b50602085015190935090506001600160a01b03811681146200077f57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115620007cc57620007cc620007a0565b500190565b600060018201620007e657620007e6620007a0565b5060010190565b600081518084526020808501945080840160005b838110156200081f5781518752958201959082019060010162000801565b509495945050505050565b6040815260006200083f6040830185620007ed565b8281036020840152620008538185620007ed565b95945050505050565b600081518084526200087681602086016020860162000691565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090620008b890830186620007ed565b8281036060840152620008cc8186620007ed565b90508281036080840152620008e281856200085c565b98975050505050505050565b6000602082840312156200090157600080fd5b81516001600160e01b0319811681146200091a57600080fd5b9392505050565b600060033d11156200093b5760046000803e5060005160e01c5b90565b600060443d10156200094d5790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156200097d57505050505090565b8285019150815181811115620009965750505050505090565b843d8701016020828501011115620009b15750505050505090565b620009c26020828601018762000662565b509095945050505050565b6020815260006200091a60208301846200085c565b600181811c90821680620009f757607f821691505b60208210810362000a1857634e487b7160e01b600052602260045260246000fd5b50919050565b612e748062000a2e6000396000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c80638705fcd4116100ee578063c9adbf8211610097578063f242432a11610071578063f242432a1461043b578063f25e42c01461044e578063f9f3a0bd14610461578063fe9dc81a1461047457600080fd5b8063c9adbf82146103db578063ce81d856146103ec578063e985e9c5146103ff57600080fd5b80639de912b1116100c85780639de912b1146103ad578063a22cb465146103b5578063bf18028c146103c857600080fd5b80638705fcd4146103745780638da5cb5b146103875780639727756a1461039a57600080fd5b80633bbd2197116101505780634e1273f41161012a5780634e1273f4146103325780636972bc50146103525780636edb7a3e1461036357600080fd5b80633bbd21971461028a5780633e27323d1461029d5780634158cc27146102b057600080fd5b806306d07c591161018157806306d07c59146102345780630e89341c146102555780632eb2c2d61461027557600080fd5b8062fdd58e146101a757806301ffc9a7146101cd5780630500387f146101f0575b600080fd5b6101ba6101b53660046121b3565b610487565b6040519081526020015b60405180910390f35b6101e06101db3660046121f5565b610530565b60405190151581526020016101c4565b61021c6101fe366004612228565b60ff166000908152600660205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016101c4565b61024761024236600461230c565b610576565b6040516101c49291906123c6565b6102686102633660046123e9565b61078d565b6040516101c49190612402565b6102886102833660046124aa565b610821565b005b610288610298366004612558565b6108c3565b6102886102ab36600461260e565b6108db565b61030a6102be3660046123e9565b60408051808201909152600080825260208201525060009081526007602090815260409182902082518084019093525460ff81168352610100900467ffffffffffffffff169082015290565b60408051825160ff16815260209283015167ffffffffffffffff1692810192909252016101c4565b610345610340366004612647565b610a51565b6040516101c4919061274f565b6005546001600160a01b031661021c565b6003546001600160a01b031661021c565b610288610382366004612762565b610b8f565b60095461021c906001600160a01b031681565b6102886103a836600461277f565b610c14565b6008546101ba565b6102886103c33660046127f9565b610c34565b6101e06103d6366004612827565b610c43565b6004546001600160a01b031661021c565b6102886103fa3660046121b3565b610cd1565b6101e061040d3660046128c2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6102886104493660046128e0565b610d3f565b61028861045c366004612762565b610dda565b61028861046f3660046123e9565b610e5c565b610288610482366004612228565b610ec9565b60006001600160a01b03831661050a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216639de912b160e01b148061056157506001600160e01b031982166303a24d0760e21b145b80610570575061057082610fc8565b92915050565b60ff8316600090815260066020526040812054606090859085906001600160a01b038083169116146106105760405162461bcd60e51b815260206004820152602b60248201527f526f7574657243726f737354616c6b203a20536f75726365204164647265737360448201527f204e6f74206c696e6b65640000000000000000000000000000000000000000006064820152608401610501565b6003546001600160a01b0316336001600160a01b0316146106995760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e000000006064820152608401610501565b600354604080516302cb03d960e61b815290516000926001600160a01b03169163b2c0f6409160048083019260209291908290030181865afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107079190612949565b90506000808780602001905181019061072091906129be565b915091506000806107318484611008565b6040516001600160a01b038e168152919350915060ff80871691908e16907f4ef7c5e8df4a93d9634e83492a16efe750374905f02a02656e31369ff469ce3f9060200160405180910390a3909b909a5098505050505050505050565b60606002805461079c90612a05565b80601f01602080910402602001604051908101604052809291908181526020018280546107c890612a05565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b50505050509050919050565b6001600160a01b03851633148061083d575061083d853361040d565b6108af5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610501565b6108bc85858585856110fa565b5050505050565b6108d1868686868686611358565b5050505050505050565b6003546001600160a01b0316336001600160a01b0316146109645760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e000000006064820152608401610501565b60ff821660009081526006602052604090205482906001600160a01b0316156109f55760405162461bcd60e51b815260206004820152603660248201527f526f7574657243726f737354616c6b203a2043726f737320436861696e20436f60448201527f6e747261637420746f20436861696e20494420736574000000000000000000006064820152608401610501565b60ff831660008181526006602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519092917f53c7bf44dd47ad6fd3a8aac7c23d9ad4bddd7ec5889d7afef3450216586460a391a3505050565b60608151835114610aca5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610501565b6000835167ffffffffffffffff811115610ae657610ae6612245565b604051908082528060200260200182016040528015610b0f578160200160208202803683370190505b50905060005b8451811015610b8757610b5a858281518110610b3357610b33612a3f565b6020026020010151858381518110610b4d57610b4d612a3f565b6020026020010151610487565b828281518110610b6c57610b6c612a3f565b6020908102919091010152610b8081612a6b565b9050610b15565b509392505050565b6009546001600160a01b03163314610bf35760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610501565b600580546001600160a01b0319166001600160a01b03831617905550565b50565b610c2f83838360405180602001604052806000815250611454565b505050565b610c3f33838361161a565b5050565b6000333014610cba5760405162461bcd60e51b815260206004820152603860248201527f526f7574657243726f737354616c6b203a2043616e206f6e6c7920626520636160448201527f6c6c65642062792043757272656e7420436f6e747261637400000000000000006064820152608401610501565b610cc685858585611454565b506001949350505050565b6009546001600160a01b03163314610d355760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610501565b610c3f828261170e565b6001600160a01b038516331480610d5b5750610d5b853361040d565b610dcd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610501565b6108bc858585858561178c565b6009546001600160a01b03163314610e3e5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610501565b600480546001600160a01b0319166001600160a01b03831617905550565b6009546001600160a01b03163314610ec05760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610501565b610c1181600855565b6003546001600160a01b0316336001600160a01b031614610f525760405162461bcd60e51b815260206004820152603c60248201527f526f7574657243726f737354616c6b203a204f6e6c792047656e65726963486160448201527f6e646c65722063616e2063616c6c20746869732066756e6374696f6e000000006064820152608401610501565b60ff81166000818152600660205260408082205490516001600160a01b0390911692917f566e5d71d4547dca8d21d2527ec375bb6ad1052ea20ab35c3f310aba1d6bc66b91a360ff16600090815260066020526040902080546001600160a01b0319169055565b6001600160a01b03163b151590565b60006001600160e01b03198216639de912b160e01b1480610ff957506001600160e01b031982166303a24d0760e21b145b80610570575061057082611937565b60006060600080600080868060200190518101906110269190612aea565b9350935093509350600080306001600160a01b03168a878787876040516024016110539493929190612b7a565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199094169390931790925290516110a69190612bcd565b6000604051808303816000865af19150503d80600081146110e3576040519150601f19603f3d011682016040523d82523d6000602084013e6110e8565b606091505b50909b909a5098505050505050505050565b815183511461115c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610501565b6001600160a01b0384166111c05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610501565b3360005b84518110156112ea5760008582815181106111e1576111e1612a3f565b6020026020010151905060008583815181106111ff576111ff612a3f565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156112925760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610501565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906112cf908490612be9565b92505081905550505050806112e390612a6b565b90506111c4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161133a929190612c01565b60405180910390a4611350818787878787611987565b505050505050565b6000806001600160a01b0387166113d75760405162461bcd60e51b815260206004820152603360248201527f43726f7373436861696e455243313135353a20526563697069656e742061646460448201527f726573732063616e6e6f74206265206e756c6c000000000000000000000000006064820152608401610501565b6113e2338787611b35565b6040517fbf18028cc26283d8a1b8191597cd1d79eb29b830c07ae6cd84366f60b68acd569060009061141e908a908a908a908a90602001612b7a565b60405160208183030381529060405290506000806114418c85856008548b611d78565b909d909c509a5050505050505050505050565b6001600160a01b0384166114b45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610501565b81518351146115165760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610501565b3360005b84518110156115b25783818151811061153557611535612a3f565b602002602001015160008087848151811061155257611552612a3f565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461159a9190612be9565b909155508190506115aa81612a6b565b91505061151a565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611603929190612c01565b60405180910390a46108bc81600087878787611987565b816001600160a01b0316836001600160a01b0316036116a15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610501565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60035460405163095ea7b360e01b81526001600160a01b03918216600482015260248101839052839182169063095ea7b3906044016020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117869190612c26565b50505050565b6001600160a01b0384166117f05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610501565b3360006117fc85611f56565b9050600061180985611f56565b90506000868152602081815260408083206001600160a01b038c1684529091529020548581101561188f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610501565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906118cc908490612be9565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461192c848a8a8a8a8a611fa1565b505050505050505050565b60006001600160e01b03198216636cdb3d1360e11b148061196857506001600160e01b031982166303a24d0760e21b145b8061057057506301ffc9a760e01b6001600160e01b0319831614610570565b6001600160a01b0384163b156113505760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906119cb9089908990889088908890600401612c43565b6020604051808303816000875af1925050508015611a06575060408051601f3d908101601f19168201909252611a0391810190612ca1565b60015b611abb57611a12612cbe565b806308c379a003611a4b5750611a26612cda565b80611a315750611a4d565b8060405162461bcd60e51b81526004016105019190612402565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610501565b6001600160e01b0319811663bc197c8160e01b14611b2c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610501565b50505050505050565b6001600160a01b038316611b975760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610501565b8051825114611bf95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610501565b604080516020810190915260009081905233905b8351811015611d0b576000848281518110611c2a57611c2a612a3f565b602002602001015190506000848381518110611c4857611c48612a3f565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015611cd45760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610501565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580611d0381612a6b565b915050611c0d565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611d5c929190612c01565b60405180910390a4604080516020810190915260009052611786565b60ff8516600090815260066020526040812054819087906001600160a01b0316611e0a5760405162461bcd60e51b815260206004820152603d60248201527f526f7574657243726f737354616c6b203a2043726f737320436861696e20436f60448201527f6e747261637420746f20436861696e204944206973206e6f74207365740000006064820152608401610501565b60008787604051602001611e1f929190612d64565b60408051601f1981840301815290829052600354600554639f77b1fb60e01b84529193506000926001600160a01b0391821692639f77b1fb92611e70928f9288928e928e9290911690600401612d86565b6020604051808303816000875af1158015611e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb39190612dc8565b6040805160ff8d8116602080840182905267ffffffffffffffff8681168587018190528651808703880181526060870180895281519185019190912060a088018952948152608090960190815260008481526007909352959091209351845495519091166101000268ffffffffffffffffff19909516921691909117929092179055909150611f448b8b8b8461209d565b60019b909a5098505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611f9057611f90612a3f565b602090810291909101015292915050565b6001600160a01b0384163b156113505760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611fe59089908990889088908890600401612df2565b6020604051808303816000875af1925050508015612020575060408051601f3d908101601f1916820190925261201d91810190612ca1565b60015b61202c57611a12612cbe565b6001600160e01b0319811663f23a6e6160e01b14611b2c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610501565b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168460ff16600360009054906101000a90046001600160a01b03166001600160a01b031663b2c0f6406040518163ffffffff1660e01b8152600401602060405180830381865afa158015612114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121389190612949565b60ff8781166000908152600660205260409081902054905192909116917f5577eec09aa2850627ee68188b4ade468b8d0e82083954ecb4928e85e3db9ad5916121909130916001600160a01b03169089908990612e2a565b60405180910390a450505050565b6001600160a01b0381168114610c1157600080fd5b600080604083850312156121c657600080fd5b82356121d18161219e565b946020939093013593505050565b6001600160e01b031981168114610c1157600080fd5b60006020828403121561220757600080fd5b8135612212816121df565b9392505050565b60ff81168114610c1157600080fd5b60006020828403121561223a57600080fd5b813561221281612219565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561228157612281612245565b6040525050565b600067ffffffffffffffff8211156122a2576122a2612245565b50601f01601f191660200190565b600082601f8301126122c157600080fd5b81356122cc81612288565b6040516122d9828261225b565b8281528560208487010111156122ee57600080fd5b82602086016020830137600092810160200192909252509392505050565b60008060006060848603121561232157600080fd5b833561232c81612219565b9250602084013561233c8161219e565b9150604084013567ffffffffffffffff81111561235857600080fd5b612364868287016122b0565b9150509250925092565b60005b83811015612389578181015183820152602001612371565b838111156117865750506000910152565b600081518084526123b281602086016020860161236e565b601f01601f19169290920160200192915050565b82151581526040602082015260006123e1604083018461239a565b949350505050565b6000602082840312156123fb57600080fd5b5035919050565b602081526000612212602083018461239a565b600067ffffffffffffffff82111561242f5761242f612245565b5060051b60200190565b600082601f83011261244a57600080fd5b8135602061245782612415565b604051612464828261225b565b83815260059390931b850182019282810191508684111561248457600080fd5b8286015b8481101561249f5780358352918301918301612488565b509695505050505050565b600080600080600060a086880312156124c257600080fd5b85356124cd8161219e565b945060208601356124dd8161219e565b9350604086013567ffffffffffffffff808211156124fa57600080fd5b61250689838a01612439565b9450606088013591508082111561251c57600080fd5b61252889838a01612439565b9350608088013591508082111561253e57600080fd5b5061254b888289016122b0565b9150509295509295909350565b60008060008060008060c0878903121561257157600080fd5b863561257c81612219565b9550602087013561258c8161219e565b9450604087013567ffffffffffffffff808211156125a957600080fd5b6125b58a838b01612439565b955060608901359150808211156125cb57600080fd5b6125d78a838b01612439565b945060808901359150808211156125ed57600080fd5b506125fa89828a016122b0565b92505060a087013590509295509295509295565b6000806040838503121561262157600080fd5b823561262c81612219565b9150602083013561263c8161219e565b809150509250929050565b6000806040838503121561265a57600080fd5b823567ffffffffffffffff8082111561267257600080fd5b818501915085601f83011261268657600080fd5b8135602061269382612415565b6040516126a0828261225b565b83815260059390931b85018201928281019150898411156126c057600080fd5b948201945b838610156126e75785356126d88161219e565b825294820194908201906126c5565b965050860135925050808211156126fd57600080fd5b5061270a85828601612439565b9150509250929050565b600081518084526020808501945080840160005b8381101561274457815187529582019590820190600101612728565b509495945050505050565b6020815260006122126020830184612714565b60006020828403121561277457600080fd5b81356122128161219e565b60008060006060848603121561279457600080fd5b833561279f8161219e565b9250602084013567ffffffffffffffff808211156127bc57600080fd5b6127c887838801612439565b935060408601359150808211156127de57600080fd5b5061236486828701612439565b8015158114610c1157600080fd5b6000806040838503121561280c57600080fd5b82356128178161219e565b9150602083013561263c816127eb565b6000806000806080858703121561283d57600080fd5b84356128488161219e565b9350602085013567ffffffffffffffff8082111561286557600080fd5b61287188838901612439565b9450604087013591508082111561288757600080fd5b61289388838901612439565b935060608701359150808211156128a957600080fd5b506128b6878288016122b0565b91505092959194509250565b600080604083850312156128d557600080fd5b823561262c8161219e565b600080600080600060a086880312156128f857600080fd5b85356129038161219e565b945060208601356129138161219e565b93506040860135925060608601359150608086013567ffffffffffffffff81111561293d57600080fd5b61254b888289016122b0565b60006020828403121561295b57600080fd5b815161221281612219565b600082601f83011261297757600080fd5b815161298281612288565b60405161298f828261225b565b8281528560208487010111156129a457600080fd5b6129b583602083016020880161236e565b95945050505050565b600080604083850312156129d157600080fd5b82516129dc816121df565b602084015190925067ffffffffffffffff8111156129f957600080fd5b61270a85828601612966565b600181811c90821680612a1957607f821691505b602082108103612a3957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612a7d57612a7d612a55565b5060010190565b600082601f830112612a9557600080fd5b81516020612aa282612415565b604051612aaf828261225b565b83815260059390931b8501820192828101915086841115612acf57600080fd5b8286015b8481101561249f5780518352918301918301612ad3565b60008060008060808587031215612b0057600080fd5b8451612b0b8161219e565b602086015190945067ffffffffffffffff80821115612b2957600080fd5b612b3588838901612a84565b94506040870151915080821115612b4b57600080fd5b612b5788838901612a84565b93506060870151915080821115612b6d57600080fd5b506128b687828801612966565b6001600160a01b0385168152608060208201526000612b9c6080830186612714565b8281036040840152612bae8186612714565b90508281036060840152612bc2818561239a565b979650505050505050565b60008251612bdf81846020870161236e565b9190910192915050565b60008219821115612bfc57612bfc612a55565b500190565b604081526000612c146040830185612714565b82810360208401526129b58185612714565b600060208284031215612c3857600080fd5b8151612212816127eb565b60006001600160a01b03808816835280871660208401525060a06040830152612c6f60a0830186612714565b8281036060840152612c818186612714565b90508281036080840152612c95818561239a565b98975050505050505050565b600060208284031215612cb357600080fd5b8151612212816121df565b600060033d1115612cd75760046000803e5060005160e01c5b90565b600060443d1015612ce85790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612d1857505050505090565b8285019150815181811115612d305750505050505090565b843d8701016020828501011115612d4a5750505050505090565b612d596020828601018761225b565b509095945050505050565b63ffffffff60e01b831681526040602082015260006123e1604083018461239a565b60ff8616815260a060208201526000612da260a083018761239a565b60408301959095525060608101929092526001600160a01b031660809091015292915050565b600060208284031215612dda57600080fd5b815167ffffffffffffffff8116811461221257600080fd5b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612bc260a083018461239a565b60006001600160a01b03808716835280861660208401525060806040830152612e56608083018561239a565b90508260608301529594505050505056fea164736f6c634300080d000a";

type MyCrossChainERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyCrossChainERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyCrossChainERC1155__factory extends ContractFactory {
  constructor(...args: MyCrossChainERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    genericHandler_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyCrossChainERC1155> {
    return super.deploy(
      uri_,
      genericHandler_,
      overrides || {}
    ) as Promise<MyCrossChainERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    genericHandler_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, genericHandler_, overrides || {});
  }
  override attach(address: string): MyCrossChainERC1155 {
    return super.attach(address) as MyCrossChainERC1155;
  }
  override connect(signer: Signer): MyCrossChainERC1155__factory {
    return super.connect(signer) as MyCrossChainERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyCrossChainERC1155Interface {
    return new utils.Interface(_abi) as MyCrossChainERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyCrossChainERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MyCrossChainERC1155;
  }
}
